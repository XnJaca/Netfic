@model Infraestructure.Models.Producto

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Save", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="col-lg-6">
                <h4>Crear Productos</h4>
                <p>Es hora de crear un producto increible 😀.</p>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-lg-3">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="font-weight-bolder">Imagen del Producto</h5>
                        <div class="row">


                            <div class="col-xl-5 col-lg-6 text-center">
                                <img class="w-100 border-radius-lg shadow-lg mx-auto" id="mainImage" src="" alt="foto">

                                <div class="my-gallery d-flex mt-4 pt-2" itemscope="" itemtype="http://schema.org/ImageGallery" data-pswp-uid="1">
                                    <!-- Contenedor para las imágenes adicionales -->
                                    <div id="additionalImagesContainer" class="d-flex flex-wrap"></div>
                                </div>
                            </div>

                            <div class="col-12">
                                <input type="file" id="imageInput" name="ImageFiles" multiple />
                                </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-9 mt-lg-0 mt-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="font-weight-bolder">Informacion del Producto</h5>
                        <div class="row">
                            <div class="col-12 col-sm-6">
                                @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-12 col-sm-6 mt-3 mt-sm-0">
                                @Html.LabelFor(model => model.EstadoProducto, "Estado")
                                @Html.DropDownListFor(model => model.estadoId,
                                     (SelectList)ViewBag.idEstadoProducto,
                                     htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-3">
                                @Html.LabelFor(model => model.precio, htmlAttributes: new { @class = "mt-4" })
                                <div class="input-group input-group-alternative mb-4">
                                    <span class="input-group-text" style="font-weight: bold;">&#8353;</span>
                                    @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-3">
                                @Html.LabelFor(model => model.cantidad, htmlAttributes: new { @class = "mt-4" })
                                @Html.EditorFor(model => model.cantidad, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                                @Html.ValidationMessageFor(model => model.cantidad, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-6">
                                @Html.LabelFor(model => model.Categoria, "Categoria", htmlAttributes: new { @class = "mt-4" })
                                 @Html.DropDownListFor(model => model.categoriaId,
                                    (SelectList)ViewBag.idCategoria,
                                    htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "mt-4" })
                                <p class="form-text text-muted text-xs ms-1 d-inline">

                                </p>
                                <div>
                                    @*<textarea class="form-control" type="text" rows="10" cols="50"> </textarea>*@
                                    @Html.TextAreaFor(model => model.descripcion, new { @class = "form-control", rows = "10", cols = "50" })
                                    @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-lg-12 text-right d-flex flex-column ">
                    <button type="submit" class="btn btn-lg bg-gradient-primary mb-0 ms-lg-auto me-lg-0 me-auto mt-lg-0 mt-2">Guardar</button>
                </div>
            </div>

        </div>
    </div>


}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
    $(document).ready(function () {
        // Evento cuando se selecciona una imagen
        $("#imageInput").change(function () {
            // Obtener el contenedor principal
            var container = $("#imageContainer");

            // Limpiar el contenedor principal
            container.empty();

            // Recorrer cada imagen seleccionada
            for (var i = 0; i < this.files.length; i++) {
                var file = this.files[i];
                var reader = new FileReader();

                // Función para cargar y mostrar la imagen
                reader.onload = function (e) {
                    // Crear un nuevo elemento de imagen
                    var imageElement = $("<img>").attr("src", e.target.result).css({
                        "max-width": "100%",
                        "max-height": "200px",
                        "margin-bottom": "10px"
                    });

                    // Agregar la imagen al contenedor principal
                    container.append(imageElement);

                    // Agregar la imagen como imagen adicional en el contenedor de imágenes adicionales
                    var additionalImageElement = $("<img>").attr("src", e.target.result).css({
                        "max-width": "100px",
                        "max-height": "100px",
                        "margin": "5px"
                    });
                    additionalImageElement.click(function () {
                        // Cambiar la imagen principal al hacer clic en la imagen adicional
                        $("#mainImage").attr("src", $(this).attr("src"));
                    });
                    $("#additionalImagesContainer").append(additionalImageElement);
                };

                // Leer el archivo de imagen como URL
                reader.readAsDataURL(file);
            }
        });
    });
</script>
}



