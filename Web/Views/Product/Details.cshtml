<style>
    .messages {
        max-height: 300px;
        overflow-y: scroll;
        padding: 10px;
    }

    .message {
        margin-bottom: 10px;
    }

        .message p {
            margin: 0;
            padding: 5px 10px;
            border-radius: 5px;
        }

    .user-message {
        background-color: #f2f2f2;
    }

    .response-message {
        background-color: #d4e1ff;
    }

    .message strong {
        font-weight: bold;
    }

    .message-time {
        font-size: 12px;
        color: #999;
        margin-top: 5px;
    }

    .response-button {
        padding: 12px;
    }
</style>

@model Infraestructure.Models.Producto

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var usuario = Session["Usuario"] as Infraestructure.Models.Usuario;

    string tipoUsuario = usuario.TipoUsuario.FirstOrDefault().descripcion.ToLower();
}


<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="mb-4">Detalles del producto</h5>
                    <div class="row">
                        <div class="col-xl-5 col-lg-6 text-center">

                            <img class="w-100 border-radius-lg shadow-lg mx-auto" src="@ViewBag.idFoto[0]" alt="foto">

                            <div class="my-gallery d-flex mt-4 pt-2" itemscope="" itemtype="http://schema.org/ImageGallery" data-pswp-uid="1">
                                @foreach (var image in ViewBag.idFoto)
                                {
                                    <figure itemprop="associatedMedia" itemscope="" itemtype="http://schema.org/ImageObject">
                                        <a href="@image" itemprop="contentUrl" data-size="500x600">
                                            <img class="w-75 min-height-100 max-height-100 border-radius-lg shadow" src="@image" alt="Image description">
                                        </a>
                                    </figure>
                                }

                            </div>
                        </div>

                        <div class="col-lg-5 mx-auto">
                            <h3 class="mt-lg-0 mt-4">@Html.DisplayFor(model => model.nombre)</h3>
                            <div class="rating">
                                <i class="fas fa-star" aria-hidden="true"></i>
                                <i class="fas fa-star" aria-hidden="true"></i>
                                <i class="fas fa-star" aria-hidden="true"></i>
                                <i class="fas fa-star" aria-hidden="true"></i>
                                <i class="fas fa-star-half-alt" aria-hidden="true"></i>
                            </div>
                            <br>
                            <h6 class="mb-0 mt-3">Vendedor: @Html.DisplayFor(model => model.Usuario.nombre)</h6>
                            <h6 class="mb-0 mt-3">Precio</h6>
                            <h5>₡ @Html.DisplayFor(model => model.precio)</h5>
                            <span class="badge bg-gradient-faded-@(Model.cantidad < 1 ? "danger" : "success")">@(Model.cantidad < 1 ? "AGOTADO" : "EN INVENTARIO")</span>
                            <br>
                            <label class="mt-4">Descripcion</label>
                            <p>@Html.DisplayFor(model => model.descripcion)</p>

                            <div class="row mt-4">
                                <div class="col-lg-5 mt-lg-0 mt-2">
                                    <label>Categoria</label><br />
                                    <span class="badge bg-gradient-secondary">@Html.DisplayFor(model => model.Categoria.descripcion)</span>
                                </div>
                                <div class="col-lg-5 mt-lg-0 mt-2">
                                    <label>Estado</label><br />
                                    <span class="badge bg-gradient-faded-primary">@Html.DisplayFor(model => model.EstadoProducto.descripcion)</span>

                                </div>
                                <div class="col-lg-2">
                                    <label for="example-number-input" class="form-control-label">Cantidad</label>
                                    <input class="form-control" type="number" value="1" max="@Model.cantidad" min="1" id="example-number-input">

                                </div>
                            </div>
                            <div class="row mt-4 justify-content-end">
                                <div class="col-lg-5 align-items-end">
                                    <button class="btn bg-gradient-primary mb-0 mt-lg-auto w-100" type="button" name="button" id="addToCartBtn">Añadir al Carrito</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Espacio para enviar y visualizar mensajes -->
    <div class="row mt-4">
        <div class="col-lg-6">
            <div class="card">
                @if (!(usuario.TipoUsuario.FirstOrDefault().id != 2))
                {
                    <div class="card-body">
                        <h5 class="mb-4">Enviar mensaje</h5>

                        @using (Html.BeginForm("Save", "Chat", FormMethod.Post, new { enctype = "multipart/form-data", id = "chatForm" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-group">
                                <input type="text" class="form-control" name="idEmisor" id="nombre" value="@usuario.id" hidden>
                                <input type="text" class="form-control" name="idProducto" id="idProducto" value="@Model.id" hidden />
                                <input type="text" class="form-control" name="idReceptor" id="idVendedor" value="@Model.vendedorId" hidden />
                            </div>

                            <div class="form-group">
                                <label for="mensaje">Mensaje</label>
                                <textarea class="form-control" name="texto" id="mensaje" rows="4"></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Enviar</button>
                        }


                    </div>
                }
                </div>
        </div>

        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="mb-4">Mensajes</h5>
                    <div class="messages" id="messagesSection">
                        @foreach (var chat in ViewBag.chats)
                        {
                            <div class="message">
                                <p class="user-message"><strong>@chat.Usuario.nombre:</strong> @chat.mensaje</p>
                                <p class="message-time">Hora: @chat.fechaEnvio.ToString("HH:mm")</p>
                                @if (!string.IsNullOrEmpty(chat.respuesta))
                                {
                                    <div class="input-group mb-3 d-flex justify-content-end ">
                                        <div class="col-md-10">
                                            <p class="response-message"><strong>@chat.Usuario1.nombre:</strong> @chat.respuesta</p>
                                            <p class="message-time">Hora: @chat.fechaEnvio.ToString("HH:mm")</p>
                                        </div>
                                    </div>
                                }
                                else if (tipoUsuario == "administrador" || tipoUsuario == "vendedor")
                                {
                                    <div class="input-group mb-3 d-flex justify-content-end">
                                        <div class="col-md-9">
                                            <input type="text" class="form-control" name="idChat" value="@chat.id" hidden>
                                            <input type="text" class="form-control" name="idEmisor" value="@usuario.id" hidden>
                                            <input type="text" class="form-control" name="idProducto" value="@Model.id" hidden />
                                            <input type="text" class="form-control" name="idReceptor" value="@Model.vendedorId" hidden />
                                            <input type="text" class="form-control response-input" id="texto" name="texto" required>
                                        </div>
                                        <div class="input-group-append ms-2">
                                            <!-- Aplicamos la clase "response-button" para que el botón sea redondo y el ícono se centre -->
                                            <button class="btn btn-primary response-button" onclick="enviarRespuesta(@chat.id)">
                                                <i class="fas fa-paper-plane"></i> <!-- Aquí está el ícono del avión de papel de Font Awesome -->
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/sweetalert")
    <script>
    document.getElementById("addToCartBtn").addEventListener("click", function () {
        var quantity = parseInt(document.getElementById("example-number-input").value);

        // Realiza una solicitud AJAX al servidor para agregar el producto al carrito
        $.ajax({
            type: "POST",
            url: "/Pedido/AddToCart",
            data: { productId: @Model.id, quantity: quantity }, // Ajusta el modelo y los nombres de propiedades según tu estructura
            success: function (response) {
                if (response.success) {
                    Swal.fire({
                        title: 'Carrito',
                        text: 'Producto añadido al carrito.',
                        icon: 'success'
                    }).then(() => {
                        // Puedes redirigir o realizar otras acciones después de la notificación
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: response.message,
                        icon: 'error'
                    });
                }
            },
            error: function () {
                // Maneja el error si es necesario
            }
        });
    });
    </script>
}

